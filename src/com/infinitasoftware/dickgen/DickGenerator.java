package com.infinitasoftware.dickgen;

import com.mbserver.api.dynamic.WorldGenerator;
import com.mbserver.api.game.Chunk;
import com.mbserver.api.game.Material;

public class DickGenerator extends WorldGenerator {
    private final short bedrock;
    private final short dirt;
    private final short grass;
    private final short redstone;
    private final short[][][] pattern;

    public DickGenerator() {
        this.bedrock = Material.BEDROCK.getID();
        this.dirt = Material.DIRT.getID();
        this.grass = Material.GRASS.getID();
        this.redstone = 160;
        
        pattern = new short[][][] {
            { //y 0
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,1,1,1,0,0,1,1,1,0}, 
                {0,1,1,1,0,0,1,1,1,0},
                {0,1,1,1,0,0,1,1,1,0},
                {0,0,0,0,0,0,0,0,0,0}
            }, { //y 1
                {0,1,1,1,0,0,1,1,1,0}, 
                {1,1,1,1,1,1,1,1,1,1}, 
                {1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1},
                {0,1,1,1,0,0,1,1,1,0}
            },{ //y 2
                {0,1,1,1,0,0,1,1,1,0}, 
                {1,1,1,1,1,1,1,1,1,1}, 
                {1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1},
                {0,1,1,1,0,0,1,1,1,0}
            },{ //y 3
                {0,1,1,1,0,0,1,1,1,0}, 
                {1,1,1,1,1,1,1,1,1,1}, 
                {1,1,1,1,1,1,1,1,1,1},
                {1,1,1,1,1,1,1,1,1,1},
                {0,1,1,1,0,0,1,1,1,0}
            },{ //y 4
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,1,1,1,1,1,1,1,1,0}, 
                {0,1,1,1,1,1,1,1,1,0},
                {0,1,1,1,1,1,1,1,1,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 5
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 6
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 7
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 8
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 9
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 10
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 11
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            },{ //y 12
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,1,1,1,1,1,1,0,0}, 
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,0,1,1,1,1,0,0,0}
            },{ //y 13
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,1,1,1,1,1,1,0,0}, 
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,0,1,1,1,1,0,0,0}
            },{ //y 14
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,1,1,1,1,1,1,0,0}, 
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,1,1,1,1,1,1,0,0},
                {0,0,0,1,1,1,1,0,0,0}
            },{ //y 15
                {0,0,0,0,0,0,0,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0}, 
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,1,1,1,1,0,0,0},
                {0,0,0,0,0,0,0,0,0,0}
            }   
        };
    }

    @Override
    public void setSeed( final long seed ) {
    }

    @Override
    public void fillChunk( final Chunk chunk ) {
        int chunkY = chunk.getLocation().getBlockY();
        
        if(chunkY == 0) {
            for ( int x = 0; x < 16; x++ )
                for ( int z = 0; z < 16; z++ ) {
                    chunk.set( x, 0, z, this.bedrock );
                    for ( int y = 1; y <= 15; y++ )
                        chunk.set( x, y, z, this.dirt );
                    chunk.set( x, 16, z, this.grass );
                }
        } else if(chunkY == 16) {
            for(int y = 0; y < 16; y++) {
                for(int x = 5; x < 10; x++) {
                    for(int z = 2; z < 12; z++) {
                        if(this.pattern[y][x - 5][z - 2] == 1)
                            chunk.set( x, y, z, this.redstone );
                    }
                }
            }
        }
    }
}
